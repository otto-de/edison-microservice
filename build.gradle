buildscript {
    apply from: 'gradle/dependencies.gradle'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath gradle_plugins.values()
    }
}

plugins {
    id 'java'
    id "com.github.ben-manes.versions" version "0.46.0"
}

// USE SEMANTIC VERSIONING AS SPECIFIED HERE: http://semver.org/spec/v2.0.0.html
//
// Major Release: X.0.0-RELEASE: Breaking Changes. Should be avoided if possible, or planned for future release.
// Minor Release: 0.X.0-RELEASE: Additional Features, updates from minor releases in Spring
// Micro Release: 0.0.X-RELEASE: Bugfixes, non-breaking changes, updates from micro releases in Spring
//
// DO NOT FORGET TO DOCUMENT CHANGES IN CHANGELOG.md
//
// Add a GitHub release for every new release: https://github.com/otto-de/edison-microservice/releases
def edison_version = "3.0.0-M3-SNAPSHOT"
//
//
//

project.ext.set("debugUpload", false)

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/libs-snapshot' }
}

apply from: "${rootDir}/gradle/root/idea.gradle"
apply from: "${rootDir}/gradle/root/eclipse.gradle"
apply from: "${rootDir}/gradle/root/jacoco.gradle"
apply from: "${rootDir}/gradle/root/nexusstaging.gradle"
apply from: "${rootDir}/gradle/maven.gradle"

subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'project-report'

    version = edison_version
    group = 'de.otto.edison'

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    // Override some Spring Boot default versions
    // see https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-customize-dependency-versions
    ext['mockito.version'] = test_versions.mockito_core
    ext['jackson.version'] = versions.jackson

    task allDeps(type: DependencyReportTask) {}

    apply from: "${rootDir}/gradle/idea.gradle"
    apply from: "${rootDir}/gradle/compile.gradle"
    apply from: "${rootDir}/gradle/test.gradle"
    apply from: "${rootDir}/gradle/jacoco.gradle"
    apply from: "${rootDir}/gradle/maven.gradle"
    apply from: "${rootDir}/gradle/signing.gradle"

    dependencies {
        compileOnly "org.springframework.boot:spring-boot-configuration-processor:${versions.spring_boot}"
        constraints {
            implementation 'junit:junit:4.13.2'  // some dependencies bring junit 4.12 which has a security vulnerability
        }
    }

    targetCompatibility = '17'
    sourceCompatibility = '17'

    project.afterEvaluate {
        tasks.withType(JavaCompile) {
            def version = compat(sourceCompatibility)
            project.logger.info("Configuring $name to use javac parameter --release $version")
            println("Configuring $name to use javac parameter --release $version")
            options.compilerArgs.addAll(['--release', version])
        }
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea', 'pr'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

// This function converts Java version string '1.8' to '8'
static String compat(String src) {
    if (src.contains('.')) {
        src.substring(src.lastIndexOf('.')+1)
    } else {
        src
    }
}
