apply plugin: 'jacoco'

def publishedProjects = subprojects.findAll { (!it.projectDir.name.contains('example')) }

task jacocoMerge(type: JacocoMerge) {
    publishedProjects.each { subproject ->
        executionData subproject.tasks.withType(Test)
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn jacocoMerge

    getAdditionalSourceDirs().from(files(publishedProjects.sourceSets.main.allSource.srcDirs))
    //additionalSourceDirs = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    getSourceDirectories().from(publishedProjects.sourceSets.main.allSource.srcDirs)
    //sourceDirectories = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    getClassDirectories().from(files(publishedProjects.sourceSets.main.output))
    //classDirectories = files(publishedProjects.sourceSets.main.output)
    executionData jacocoMerge.destinationFile

    reports {
        html.required = true
        xml.required = true
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}
