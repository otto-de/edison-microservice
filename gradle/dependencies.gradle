/**
 * For an example
 * @see https://raw.githubusercontent.com/ben-manes/caffeine/master/gradle/dependencies.gradle
 *
 */
ext {
    versions = [
            spring_boot                      : '3.0.4',
            spring                           : '6.0.7',
            spring_security                  : '6.0.2',
            spring_security_jwt              : '1.1.1.RELEASE',
            jcip_annotations                 : '1.0',
            logback_classic                  : '1.4.6',
            togglz                           : '4.0,0-M2',
            mongodb_driver                   : '4.9.0',
            caffeine                         : '3.1.5',
            json_path                        : '2.8.0',
            unboundid_ldapsdk                : '6.0.8',
            hibernate_validator              : '8.0.0.Final',
            edison_hal                       : '2.1.1',
            validator_collection             : '2.2.0',
            java_validation_api              : '3.0.2',
            aws_sdk                          : '2.20.35',
            java_xml                         : '2.3.0',
            jackson                          : '2.14.2'
    ]
    test_versions = [
            junit         : '5.9.2',
            hamcrest      : '2.2',
            mockito_core  : '5.2.0',
            jsonassert    : '1.5.1',
            rest_assured  : '5.3.0',
            commons_codec : '1.15',
            testcontainers: '1.17.6'
    ]
    plugin_versions = [
            versions     : '0.25.0',
            jacoco       : '0.8.8',
            nexus_staging: '0.30.0'
    ]

    libraries = [
            spring_boot                        : "org.springframework.boot:spring-boot:${versions.spring_boot}",
            spring_boot_configuration_processor: "org.springframework.boot:spring-boot-configuration-processor:${versions.spring_boot}",
            spring_boot_autoconfigure          : "org.springframework.boot:spring-boot-autoconfigure:${versions.spring_boot}",
            spring_boot_devtools               : "org.springframework.boot:spring-boot-devtools:${versions.spring_boot}",
            spring_boot_starter_web            : "org.springframework.boot:spring-boot-starter-web:${versions.spring_boot}",
            spring_boot_starter_cache          : "org.springframework.boot:spring-boot-starter-cache:${versions.spring_boot}",
            spring_boot_starter_actuator       : "org.springframework.boot:spring-boot-starter-actuator:${versions.spring_boot}",
            spring_boot_starter_thymeleaf      : "org.springframework.boot:spring-boot-starter-thymeleaf:${versions.spring_boot}",
            spring_security                    : "org.springframework.security:spring-security-core:${versions.spring_security}",
            spring_security_web                : "org.springframework.security:spring-security-web:${versions.spring_security}",
            spring_security_jwt                : "org.springframework.security:spring-security-jwt:${versions.spring_security_jwt}",
            aws_sdk_s3                         : "software.amazon.awssdk:s3:${versions.aws_sdk}",
            aws_sdk_ssm                        : "software.amazon.awssdk:ssm:${versions.aws_sdk}",
            aws_sdk_dynamodb                   : "software.amazon.awssdk:dynamodb:${versions.aws_sdk}",
            jcip_annotations                   : "net.jcip:jcip-annotations:${versions.jcip_annotations}",
            logback_classic                    : "ch.qos.logback:logback-classic:${versions.logback_classic}",
            spring_context_support             : "org.springframework:spring-context-support:${versions.spring}",
            togglz_console                     : "org.togglz:togglz-console:${versions.togglz}",
            togglz_spring_web                  : "org.togglz:togglz-spring-web:${versions.togglz}",
            togglz_spring_boot_starter         : "org.togglz:togglz-spring-boot-starter:${versions.togglz}",
            togglz_testing                     : "org.togglz:togglz-testing:${versions.togglz}",
            mongodb_driver_core                : "org.mongodb:mongodb-driver-core:${versions.mongodb_driver}",
            mongodb_driver_sync                : "org.mongodb:mongodb-driver-sync:${versions.mongodb_driver}",
            mongodb_bson                       : "org.mongodb:bson:${versions.mongodb_driver}",
            caffeine                           : "com.github.ben-manes.caffeine:caffeine:${versions.caffeine}",
            unboundid_ldapsdk                  : "com.unboundid:unboundid-ldapsdk:${versions.unboundid_ldapsdk}",
            hibernate_validator                : "org.hibernate.validator:hibernate-validator:${versions.hibernate_validator}",
            java_validation_api                : "jakarta.validation:jakarta.validation-api:${versions.java_validation_api}",
            edison_hal                         : "de.otto.edison:edison-hal:${versions.edison_hal}",
            validator_collection               : "cz.jirutka.validator:validator-collection:${versions.validator_collection}",
            jackson                            : "com.fasterxml.jackson.core:jackson-core:${versions.jackson}",
            jackson_databind                   : "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}",
            jackson_annotations                : "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
    ]
    java_xml = [
            "jakarta.xml.bind:jaxb-api:${versions.java_xml}",
            "com.sun.xml.bind:jaxb-core:${versions.java_xml}",
            "com.sun.xml.bind:jaxb-impl:${versions.java_xml}"
    ]
    test_libraries = [
            junit                   : "org.junit.jupiter:junit-jupiter-api:${test_versions.junit}",
            junit_params            : "org.junit.jupiter:junit-jupiter-params:${test_versions.junit}",
            junit_engine            : "org.junit.jupiter:junit-jupiter-engine:${test_versions.junit}",
            hamcrest_core           : "org.hamcrest:hamcrest-core:${test_versions.hamcrest}",
            hamcrest_library        : "org.hamcrest:hamcrest-library:${test_versions.hamcrest}",
            mockito_core            : "org.mockito:mockito-core:${test_versions.mockito_core}",
            spring_test             : "org.springframework:spring-test:${versions.spring}",
            spring_boot_starter_test: "org.springframework.boot:spring-boot-starter-test:${versions.spring_boot}",
            jsonassert              : "org.skyscreamer:jsonassert:${test_versions.jsonassert}",
            togglz_testing          : "org.togglz:togglz-testing:${versions.togglz}",
            testcontainers_mongo    : "org.testcontainers:mongodb:${test_versions.testcontainers}",
            testcontainers_junit    : "org.testcontainers:junit-jupiter:${test_versions.testcontainers}",
            json_path               : "com.jayway.jsonpath:json-path:${versions.json_path}",
            rest_assured            : "io.rest-assured:rest-assured:${test_versions.rest_assured}",
            commons_codec           : "commons-codec:commons-codec:${test_versions.commons_codec}"

    ]
    gradle_plugins = [
            spring_boot  : "org.springframework.boot:spring-boot-gradle-plugin:${versions.spring_boot}",
            nexus_staging: "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:${plugin_versions.nexus_staging}"
    ]
}
