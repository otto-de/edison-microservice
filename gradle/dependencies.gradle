/**
 * inspired by
 * @see https://raw.githubusercontent.com/ben-manes/caffeine/master/gradle/dependencies.gradle
 *
 */
ext {
    versions = [
            spring_boot                      : '3.5.3',
            jcip_annotations                 : '1.0',
            togglz                           : '4.4.0',
            json_path                        : '2.9.0',
            unboundid_ldapsdk                : '7.0.3',
            hibernate_validator              : '8.0.2.Final',
            edison_hal                       : '2.2.0',
            validator_collection             : '2.2.0',
            aws_sdk                          : '2.32.13',
            java_xml                         : '2.3.0',
            micrometer                       : '1.15.2',
            mockserver                       : '5.15.0'
    ]
    libraries = [
            spring_boot                        : "org.springframework.boot:spring-boot",
            spring_boot_configuration_processor: "org.springframework.boot:spring-boot-configuration-processor",
            spring_boot_autoconfigure          : "org.springframework.boot:spring-boot-autoconfigure",
            spring_boot_devtools               : "org.springframework.boot:spring-boot-devtools",
            spring_boot_starter_web            : "org.springframework.boot:spring-boot-starter-web",
            spring_boot_starter_cache          : "org.springframework.boot:spring-boot-starter-cache",
            spring_boot_starter_actuator       : "org.springframework.boot:spring-boot-starter-actuator",
            spring_boot_starter_thymeleaf      : "org.springframework.boot:spring-boot-starter-thymeleaf",
            spring_security                    : "org.springframework.security:spring-security-core",
            spring_security_web                : "org.springframework.security:spring-security-web",
            spring_security_jwt                : "org.springframework.security:spring-security-jwt",
            aws_sdk_s3                         : "software.amazon.awssdk:s3:${versions.aws_sdk}",
            aws_sdk_ssm                        : "software.amazon.awssdk:ssm:${versions.aws_sdk}",
            aws_sdk_dynamodb                   : "software.amazon.awssdk:dynamodb:${versions.aws_sdk}",
            jcip_annotations                   : "net.jcip:jcip-annotations:${versions.jcip_annotations}",
            logback_classic                    : "ch.qos.logback:logback-classic",
            spring_context_support             : "org.springframework:spring-context-support",
            togglz_console                     : "org.togglz:togglz-console:${versions.togglz}",
            togglz_spring_web                  : "org.togglz:togglz-spring-web:${versions.togglz}",
            togglz_spring_boot_starter         : "org.togglz:togglz-spring-boot-starter:${versions.togglz}",
            togglz_testing                     : "org.togglz:togglz-testing:${versions.togglz}",
            mongodb_driver_core                : "org.mongodb:mongodb-driver-core",
            mongodb_driver_sync                : "org.mongodb:mongodb-driver-sync",
            mongodb_bson                       : "org.mongodb:bson",
            caffeine                           : "com.github.ben-manes.caffeine:caffeine",
            unboundid_ldapsdk                  : "com.unboundid:unboundid-ldapsdk",
            hibernate_validator                : "org.hibernate.validator:hibernate-validator",
            java_validation_api                : "jakarta.validation:jakarta.validation-api",
            edison_hal                         : "de.otto.edison:edison-hal:${versions.edison_hal}",
            validator_collection               : "cz.jirutka.validator:validator-collection:${versions.validator_collection}",
            jackson                            : "com.fasterxml.jackson.core:jackson-core",
            jackson_databind                   : "com.fasterxml.jackson.core:jackson-databind",
            jackson_annotations                : "com.fasterxml.jackson.core:jackson-annotations",
            micrometer                         : "io.micrometer:micrometer-core"
    ]

    plugin_versions = [
            versions     : '0.25.0',
            jacoco       : '0.8.12'
    ]

    java_xml = [
            "jakarta.xml.bind:jaxb-api",
            "com.sun.xml.bind:jaxb-core",
            "com.sun.xml.bind:jaxb-impl"
    ]
    test_libraries = [
            junit                    : "org.junit.jupiter:junit-jupiter-api",
            junit_params             : "org.junit.jupiter:junit-jupiter-params",
            junit_engine             : "org.junit.jupiter:junit-jupiter-engine",
            hamcrest_core            : "org.hamcrest:hamcrest-core",
            hamcrest_library         : "org.hamcrest:hamcrest-library",
            mockito_core             : "org.mockito:mockito-core",
            spring_test              : "org.springframework:spring-test",
            spring_boot_starter_test : "org.springframework.boot:spring-boot-starter-test",
            jsonassert               : "org.skyscreamer:jsonassert",
            togglz_testing           : "org.togglz:togglz-testing:${versions.togglz}",
            testcontainers_mongo     : "org.testcontainers:mongodb",
            testcontainers_junit     : "org.testcontainers:junit-jupiter",
            json_path                : "com.jayway.jsonpath:json-path",
            rest_assured             : "io.rest-assured:rest-assured",
            commons_codec            : "commons-codec:commons-codec",
            mockserver_netty         : "org.mock-server:mockserver-netty:${versions.mockserver}",
            mockserver_client_java   : "org.mock-server:mockserver-client-java:${versions.mockserver}",
            mockserver_junit_jupiter : "org.mock-server:mockserver-junit-jupiter:${versions.mockserver}",
            awaitility               : "org.awaitility:awaitility"
    ]
    gradle_plugins = [
            spring_boot  : "org.springframework.boot:spring-boot-gradle-plugin:${versions.spring_boot}"
    ]
}
